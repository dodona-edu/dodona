<% content_for :javascripts do %>
  <%= javascript_pack_tag 'index' %>
<% end %>
<div class='table-toolbar'>
  <div class='table-toolbar-tools'>
    <i class="material-icons">search</i>
    <form class='search' onsubmit="return false;">
      <input type='text' id='filter-query' placeholder='<%= t("layout.search.search") %>' name='filter' autocomplete="off"/>
      <div id="progress-filter" class="dodona-progress dodona-progress-indeterminate">
        <div class="progressbar bar bar1" style="width: 0%;"></div>
        <div class="bufferbar bar bar2" style="width: 100%;"></div>
        <div class="auxbar bar bar3" style="width: 0%;"></div>
      </div>
    </form>
    <div class="btn-group hidden actions" id="kebab-menu">
      <a class="btn btn-icon dropdown-toggle" data-toggle="dropdown">
        <i class="material-icons">more_vert</i>
      </a>
      <ul class="dropdown-menu dropdown-menu-right">
      </ul>
    </div>
  </div>
</div>

<script type="text/javascript">
    $(function () {
        const filterCollections = {};
        <% if local_assigns.fetch :labels, false %>
        filterCollections["labels"] = {
            param: "labels",
            paramVal: function(l) { return l.name; },
            multi: true,
            data: <%= raw render template: 'labels/index', formats: :json %>,
            color: function (label) {
                return label.color;
            },
        };
        <% end %>
        <% if local_assigns.fetch :programming_languages, false %>
        filterCollections["programming_languages"] = {
            param: "programming_language",
            paramVal: function(p) { return p.name; },
            multi: false,
            data: <%= raw render template: 'programming_languages/index', formats: :json %>,
            color: function () {
                return "teal";
            },
        };
        <% end %>
        <% if local_assigns.fetch :repositories, false %>
        filterCollections["repositories"] = {
            param: "repository_id",
            paramVal: function(r) { return r.id; },
            multi: false,
            data: <%= raw render template: 'repositories/index', formats: :json %>,
            color: function () {
                return "blue-grey";
            },
        };
        <% end %>
        <% if local_assigns.fetch :institutions, false %>
        filterCollections["institutions"] = {
            param: "institution_id",
            paramVal: function(i) { return i.id; },
            multi: false,
            data: <%= raw local_assigns.fetch(:institutions, []).map{|i| {id: i.id, name: i.name}}.to_json %>,
            color: function () {
                return "pink";
            },
        };
        <% end %>
        <% if local_assigns.fetch :course_labels, false %>
        filterCollections["course_labels"] = {
            param: "course_labels",
            paramVal: function (cl) {
                return cl.name;
            },
            multi: true,
            data: <%= raw local_assigns.fetch(:course_labels, []).map{|cl| {id: cl.id, name: cl.name}}.to_json %>,
            color: function () {
                return "orange";
            },
        };
        <% end %>
        <% if local_assigns.fetch :statuses, false %>
        filterCollections["statuses"] = {
            param: "status",
            paramVal: function (s) {
                return s.id;
            },
            multi: false,
            data: <%= raw local_assigns.fetch(:statuses, []).map{|s| {id: s, name: Submission.human_enum_name(:status, s)}}.to_json %>,
            color: function () {
                return "indigo";
            },
        };
        <% end %>

        dodona.initFilterIndex("<%= local_assigns.fetch :baseUrl, "" %>", <%= local_assigns.fetch :eager, false %>, <%= raw (local_assigns.fetch :actions, false).to_json %>, <%= local_assigns.fetch :init_filter, true %>, filterCollections);
    });
</script>
