<div class="row">
  <div class="col-md-8 offset-md-2 col-12">
    <div class="page-subtitle">
      <h1><%= t '.title' %></h1>
    </div>

    <div class="card">
      <div class="card-title card-title-colored">
        <h2 class="card-title-text">Reproducing Predictive Learning Analytics in CS1: Toward Generalizable and Explainable Models for Enhancing Student Retention</h2>
        <div class="card-subtitle-text">
          Denis Zhidkikh, Ville Heilala, Charlotte Van Petegem, Peter Dawyndt, Miitta Järvinen, Sami Viitanen, Bram De Wever, Bart Mesuere, Vesa Lappalainen, Lauri Kettunen, Raija Hämäläinen
        </div>
      </div>
      <div class="card-supporting-text">
        <div class="row">
          <div class="col-md-8">
            <h4>Abstract</h4>
            <p>
              Predictive learning analytics has been widely explored in educational research to improve student retention and academic success in an introductory programming course in computer science (CS1).
              General-purpose and interpretable dropout predictions still pose a challenge.
              Our study aims to reproduce and extend the data analysis of a privacy-first student pass–fail prediction approach proposed by Van Petegem and colleagues (2022) in a different CS1 course.
              Using student submission and self-report data, we investigated the reproducibility of the original approach, the effect of adding self-reports to the model, and the interpretability of the model features.
              The results showed that the original approach for student dropout prediction could be successfully reproduced in a different course context and that adding self-report data to the prediction model improved accuracy for the first four weeks.
              We also identified relevant features associated with dropout in the CS1 course, such as timely submission of tasks and iterative problem solving.
              When analyzing student behaviour, submission data and self-report data were found to complement each other.
              The results highlight the importance of transparency and generalizability in learning analytics and the need for future research to identify other factors beyond self-reported aptitude measures and student behaviour that can enhance dropout prediction.
            </p>
            <h4>Citation</h4>
            <p>
              Zhidkikh, D., Heilala, V., Van Petegem, C., Dawyndt, P., Järvinen, M., Viitanen, S., De Wever, B., Mesuere, B., Lappalainen, V., Kettunen, L., & Hämäläinen, R. (2024). Reproducing Predictive Learning Analytics in CS1: Toward Generalizable and Explainable Models for Enhancing Student Retention. Journal of Learning Analytics, 1-21. <%= link_to "https://doi.org/10.18608/jla.2024.7979", "https://doi.org/10.18608/jla.2024.7979" %>
            </p>
          </div>
          <div class="col-md-4">
            <%= link_to "https://doi.org/10.18608/jla.2024.7979", class: "publication-image" do %>
              <%= image_tag "publications/zhidkikh-2024.png" %>
            <% end %>
          </div>
        </div>
      </div>
    </div>

    <div class="card">
      <div class="card-title card-title-colored">
        <h2 class="card-title-text">Dodona: Learn to code with a virtual co-teacher that supports active learning</h2>
        <div class="card-subtitle-text">
          Charlotte Van Petegem, Rien Maertens, Niko Strijbol, Jorg Van Renterghem, Felix Van der Jeugt, Bram De Wever, Peter Dawyndt, Bart Mesuere
        </div>
      </div>
      <div class="card-supporting-text">
        <div class="row">
          <div class="col-md-8">
            <h4>Abstract</h4>
            <p>
              Dodona (dodona.ugent.be) is an intelligent tutoring system for computer programming.
              It provides real-time data and feedback to help students learn better and teachers teach better.
              Dodona is free to use and has more than 61 thousand registered users across many educational and research institutes, including 20 thousand new users in the last year.
              The source code of Dodona is available on GitHub under the permissive MIT open-source license.
              This paper presents Dodona and its design and look-and-feel.
              We highlight some of the features built into Dodona that make it possible to shorten feedback loops, and discuss an example of how these features can be used in practice.
              We also highlight some of the research opportunities that Dodona has opened up and present some future developments.
            </p>
            <h4>Citation</h4>
            <p>
              Van Petegem, C., Maertens, R., Strijbol, N., Van Renterghem, J., Van der Jeugt, F., De Wever, B., Dawyndt, P., Mesuere, B., 2023b. Dodona: Learn to code with a virtual co-teacher that supports active learning. SoftwareX 24, 101578. <%= link_to "https://doi.org/10.1016/j.softx.2023.101578", "https://doi.org/10.1016/j.softx.2023.101578" %>
            </p>
          </div>
          <div class="col-md-4">
            <%= link_to "https://doi.org/10.1016/j.softx.2023.101578", class: "publication-image" do %>
              <%= image_tag "publications/vanpetegem-2023-2.png" %>
            <% end %>
          </div>
        </div>
      </div>
    </div>

    <div class="card">
      <div class="card-title card-title-colored">
        <h2 class="card-title-text">Dolos 2.0: Towards Seamless Source Code Plagiarism Detection in Online Learning Environments</h2>
        <div class="card-subtitle-text">
          Rien Maertens, Peter Dawyndt, Bart Mesuere
        </div>
      </div>
      <div class="card-supporting-text">
        <div class="row">
          <div class="col-md-8">
            <h4>Abstract</h4>
            <p>
              With the increasing demand for programming skills comes a trend towards more online programming courses and assessments.
              While this allows educators to teach larger groups of students, it also opens the door to dishonest student behaviour, such as copying code from other students.
              When teachers use assignments where all students write code for the same problem, source code similarity tools can help to combat plagiarism.
              Unfortunately, teachers often do not use these tools to prevent such behaviour.
              In response to this challenge, we have developed a new source code plagiarism detection tool named Dolos.
              Dolos is open-source, supports a wide range of programming languages, and is designed to be user-friendly.
              It enables teachers to detect, prove and prevent plagiarism in programming courses by using fast algorithms and powerful visualisations.
              We present further enhancements to Dolos and discuss how it can be integrated into modern computing education courses to meet the challenges of online learning and assessment.
              By lowering the barriers for teachers to detect, prove and prevent plagiarism in programming courses, Dolos can help protect academic integrity and ensure that students earn their grades honestly.
            </p>
            <h4>Citation</h4>
            <p>
              Maertens, R., Dawyndt, P., Mesuere, B., 2023. Dolos 2.0: Towards Seamless Source Code Plagiarism Detection in Online Learning Environments, in: Proceedings of the 2023 Conference on Innovation and Technology in Computer Science Education V. 2, ITiCSE 2023. Association for Computing Machinery, New York, NY, USA, p. 632. <%= link_to "https://doi.org/10.1145/3587103.3594166", "https://doi.org/10.1145/3587103.3594166" %>
            </p>
          </div>
          <div class="col-md-4">
            <%= link_to "https://doi.org/10.1145/3587103.3594166", class: "publication-image" do %>
              <%= image_tag "publications/maertens-2023.png" %>
            <% end %>
          </div>
        </div>
      </div>
    </div>

    <div class="card">
      <div class="card-title card-title-colored">
        <h2 class="card-title-text">Dodona: Learn to Code with a Virtual Co-teacher that Supports Active Learning</h2>
        <div class="card-subtitle-text">
          Charlotte Van Petegem, Peter Dawyndt, Bart Mesuere
        </div>
      </div>
      <div class="card-supporting-text">
        <div class="row">
          <div class="col-md-8">
            <h4>Abstract</h4>
            <p>
              Dodona (dodona.ugent.be) is an intelligent tutoring system for learning computer programming, statistics and data science.
              It bridges the gap between assessment and learning by providing real-time data and feedback to help students learn better, teachers teach better and educational technology become more effective.
              We show how Dodona can be used as a virtual co-teacher to stimulate active learning and support challenge-based education in open and collaborative learning environments.
              We also highlight some of the opportunities and challenges we have faced in practice.
              Dodona is free to use and has more than 50 thousand registered users across many educational and research institutions, including 15 thousand new users in the last year.
              Dodona's source code is available on GitHub under the permissive MIT open-source license.
            </p>
            <h4>Citation</h4>
            <p>
              Van Petegem, C., Dawyndt, P., Mesuere, B., 2023a. Dodona: Learn to Code with a Virtual Co-teacher that Supports Active Learning, in: Proceedings of the 2023 Conference on Innovation and Technology in Computer Science Education V. 2, ITiCSE 2023. Association for Computing Machinery, New York, NY, USA, p. 633. <%= link_to "https://doi.org/10.1145/3587103.3594165", "https://doi.org/10.1145/3587103.3594165" %>
            </p>
          </div>
          <div class="col-md-4">
            <%= link_to "https://doi.org/10.1145/3587103.3594165", class: "publication-image" do %>
              <%= image_tag "publications/vanpetegem-2023.png" %>
            <% end %>
          </div>
        </div>
      </div>
    </div>

    <div class="card">
      <div class="card-title card-title-colored">
        <h2 class="card-title-text">Blink: An Educational Software Debugger for Scratch</h2>
        <div class="card-subtitle-text">
          Niko Strijbol, Christophe Scholliers, Peter Dawyndt
        </div>
      </div>
      <div class="card-supporting-text">
        <div class="row">
          <div class="col-md-8">
            <h4>Abstract</h4>
            <p>
              Debugging is an important aspect of programming.
              Most programming languages have some features and tools to facilitate debugging.
              As the debugging process is also frustrating, it requires good scaffolding, in which a debugger can be a useful tool.
              Scratch is a visual block-based programming language that is commonly used to teach programming to children, aged 10-14.
              It comes with its own integrated development environment (IDE), where children can edit and run their code.
              This IDE misses some of the tools that are available in traditional IDEs, such as a debugger.
              In response to this challenge, we developed Blink.
              Blink is a debugger for Scratch with the aim of being usable to the young audience that typically uses Scratch.
              We present the currently implemented features of the debugger, and the challenges we faced while implementing those, both from a user-experience standpoint and a technical standpoint.
            </p>
            <h4>Citation</h4>
            <p>
              Strijbol, N., Scholliers, C., Dawyndt, P., 2023a. Blink: An Educational Software Debugger for Scratch, in: Proceedings of the 2023 Conference on Innovation and Technology in Computer Science Education V. 2, ITiCSE 2023. Association for Computing Machinery, New York, NY, USA, p. 648. <%= link_to "https://doi.org/10.1145/3587103.3594189", "https://doi.org/10.1145/3587103.3594189" %>
            </p>
          </div>
          <div class="col-md-4">
            <%= link_to "https://doi.org/10.1145/3587103.3594189", class: "publication-image" do %>
              <%= image_tag "publications/strijbol-2023.png" %>
            <% end %>
          </div>
        </div>
      </div>
    </div>

    <div class="card">
      <div class="card-title card-title-colored">
        <h2 class="card-title-text">TESTed — An educational testing framework with language-agnostic test suites for programming exercises</h2>
        <div class="card-subtitle-text">
          Niko Strijbol, Charlotte Van Petegem, Rien Maertens, Boris Sels, Christophe Scholliers, Peter Dawyndt, Bart Mesuere
        </div>
      </div>
      <div class="card-supporting-text">
        <div class="row">
          <div class="col-md-8">
            <h4>Abstract</h4>
            <p>
              In educational contexts, automated assessment tools (AAT) are commonly used to provide formative feedback on programming exercises.
              However, designing exercises for AAT remains a laborious task or imposes limitations on the exercises.
              Most AAT use either output comparison, where the generated output is compared against an expected output, or unit testing, where the tool has access to the code of the submission under test.
              While output comparison has the advantage of being programming language independent, the testing capabilities are limited to the output.
              Conversely, unit testing can generate more granular feedback, but is tightly coupled with the programming language of the submission.
              In this paper, we introduce TESTed, which enables the best of both worlds: combining the granular feedback of unit testing with the programming language independence of output comparison.
              Educators can save time by designing exercises that can be used across programming languages.
              Finally, we report on using TESTed in educational practice.
            </p>
            <h4>Citation</h4>
            <p>
              Strijbol, N., Van Petegem, C., Maertens, R., Sels, B., Scholliers, C., Dawyndt, P., Mesuere, B., 2023b. TESTed—An educational testing framework with language-agnostic test suites for programming exercises. SoftwareX 22, 101404. <%= link_to "https://doi.org/10.1016/j.softx.2023.101404", "https://doi.org/10.1016/j.softx.2023.101404" %>
            </p>
          </div>
          <div class="col-md-4">
            <%= link_to "https://doi.org/10.1016/j.softx.2023.101404", class: "publication-image" do %>
              <%= image_tag "publications/strijbol-2022.png" %>
            <% end %>
          </div>
        </div>
      </div>
    </div>

    <div class="card">
      <div class="card-title card-title-colored">
        <h2 class="card-title-text">Pass/fail prediction in programming courses</h2>
        <div class="card-subtitle-text">
          Charlotte Van Petegem, Louise Deconinck, Dieter Mourisse, Rien Maertens, Niko Strijbol, Bart Dhoedt, Bram De Wever, Peter Dawyndt, Bart Mesuere
        </div>
      </div>
      <div class="card-supporting-text">
        <div class="row">
          <div class="col-md-8">
            <h4>Abstract</h4>
            <p>
              We present a privacy-friendly early-detection framework to identify students at risk of failing in introductory programming courses at university.
              The framework was validated for two different courses with annual editions taken by higher education students (N = 2&thinsp;080) and was found to be highly accurate and robust against variation in course structures, teaching and learning styles, programming exercises and classification algorithms.
              By using interpretable machine learning techniques, the framework also provides insight into what aspects of practising programming skills promote or inhibit learning or have no or minor effect on the learning process.
              Findings showed that the framework was capable of predicting students’ future success already early on in the semester.
            </p>
            <h4>Citation</h4>
            <p>
              Van Petegem, C., Deconinck, L., Mourisse, D., Maertens, R., Strijbol, N., Dhoedt, B., De Wever, B., Dawyndt, P., Mesuere, B., 2022. Pass/Fail Prediction in Programming Courses. Journal of Educational Computing Research 68–95. <%= link_to "https://doi.org/10.1177/07356331221085595", "https://doi.org/10.1177/07356331221085595" %>
            </p>
          </div>
          <div class="col-md-4">
            <%= link_to "https://doi.org/10.1177/07356331221085595", class: "publication-image" do %>
              <%= image_tag "publications/vanpetegem-2022.png" %>
            <% end %>
          </div>
        </div>
      </div>
    </div>

    <div class="card">
      <div class="card-title card-title-colored">
        <h2 class="card-title-text">Dolos: Language-agnostic plagiarism detection in source code</h2>
        <div class="card-subtitle-text">
          Rien Maertens, Charlotte Van Petegem, Niko Strijbol, Toon Baeyens, Arne Carla Jacobs, Peter Dawyndt, Bart Mesuere
        </div>
      </div>
      <div class="card-supporting-text">
        <div class="row">
          <div class="col-md-8">
            <h4>Abstract</h4>
            <p>
              Learning to code is increasingly embedded in secondary and higher education curricula, where solving programming exercises plays an important role in the learning process and in formative and summative assessment.
              Unfortunately, students admit that copying code from each other is a common practice and teachers indicate they rarely use plagiarism detection tools.
              We want to lower the barrier for teachers to detect plagiarism by introducing a new source code plagiarism detection tool (Dolos) that is powered by state-of-the art similarity detection algorithms, offers interactive visualizations, and uses generic parser models to support a broad range of programming languages.
              Dolos is compared with state-of-the-art plagiarism detection tools in a benchmark based on a standardized dataset.
              We describe our experience with integrating Dolos in a programming course with a strong focus on online learning and the impact of transitioning to remote assessment during the COVID-19 pandemic.
              Dolos outperforms other plagiarism detection tools in detecting potential cases of plagiarism and is a valuable tool for preventing and detecting plagiarism in online learning environments.
              It is available under the permissive MIT open-source license at <a href="https://dolos.ugent.be">https://dolos.ugent.be</a>.
            </p>
            <h4>Citation</h4>
            <p>
              Maertens, R., Van Petegem, C., Strijbol, N., Baeyens, T., Jacobs, A.C., Dawyndt, P., Mesuere, B., 2022. Dolos: Language-agnostic plagiarism detection in source code. Journal of Computer Assisted Learning. <%= link_to "https://doi.org/10.1111/jcal.12662", "https://doi.org/10.1111/jcal.12662" %>
            </p>
          </div>
          <div class="col-md-4">
            <%= link_to "https://doi.org/10.1111/jcal.12662", class: "publication-image" do %>
              <%= image_tag "publications/maertens-2022.png" %>
            <% end %>
          </div>
        </div>
      </div>
    </div>

  </div>
</div>
